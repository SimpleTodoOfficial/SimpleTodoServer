buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:3.0.5')
    }
}

plugins {
	// id 'net.ltgt.apt' version '0.21'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'java'
}

apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

springBoot {
	mainClass = 'de.calltopower.simpletodo.STDApplication'
}


if (!hasProperty('mainClass')) {
    ext.mainClass = 'de.calltopower.simpletodo.STDApplication'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 17
targetCompatibility = 17

configurations.all {
	exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	exclude group: 'commons-logging', module: 'commons-logging'
	resolutionStrategy {
    }
}

dependencies {
    // JAX-B dependencies for JDK 9+
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.2'

    implementation('org.springframework.boot:spring-boot-starter-web:3.0.5')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa:3.0.5')
    implementation('org.springframework.boot:spring-boot-starter-log4j2:3.0.5')
    implementation('org.springframework.boot:spring-boot-starter-security:3.0.5')
    implementation('org.springframework.boot:spring-boot-starter-cache:3.0.5')
    implementation('org.springframework.boot:spring-boot-starter-mail:3.0.5')
    implementation('org.springframework.boot:spring-boot-starter-validation:3.0.5')
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf:3.0.5')
    implementation('org.hibernate.orm:hibernate-jcache:6.1.7.Final')
    implementation('org.ehcache:ehcache:3.10.8:jakarta')
    implementation('io.jsonwebtoken:jjwt-api:0.11.5')
    implementation('io.jsonwebtoken:jjwt-impl:0.11.5')
    implementation('io.jsonwebtoken:jjwt-gson:0.11.5')
    implementation('org.apache.httpcomponents.client5:httpclient5:5.2.1')
    implementation('com.google.code.gson:gson:2.10.1')
    implementation('org.mariadb.jdbc:mariadb-java-client:3.1.3')
	implementation('org.apache.commons:commons-lang3:3.12.0')
	
    testImplementation('org.springframework.boot:spring-boot-starter-test:3.0.5')
    testImplementation('com.h2database:h2:2.1.210')

	compileOnly 'org.projectlombok:lombok:1.18.26'
	annotationProcessor 'org.projectlombok:lombok:1.18.26'
	
	testCompileOnly 'org.projectlombok:lombok:1.18.26'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'
}

configurations.implementation {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

bootJar {
    baseName = 'ctp-simpletodoserver'
    version =  '0.00-00-SNAPSHOT'
    mainClass = 'de.calltopower.simpletodo.STDApplication'

    manifest {
        attributes 'Start-Class': 'de.calltopower.simpletodo.STDApplication'
    }
}

test {
    exclude '**/All*Tests.class'
    if (!project.hasProperty('runIntTest')) {
       exclude '**/*IntTest.class'
    }
}

task zip(type: Zip, dependsOn: 'bootJar') {
   from '.'
   include 'src/main/resources/application.properties'
   include 'README.md'
   include 'scripts/*'
   include 'build/libs/*'
   archiveName 'simpletodo-server-1.8.0.zip'
   
    // Flatten the hierarchy by setting the path
    // of all files to their respective basename
    eachFile {
      path = name
    }

    // Flattening the hierarchy leaves empty directories,
    // do not copy those
    includeEmptyDirs = false
}
